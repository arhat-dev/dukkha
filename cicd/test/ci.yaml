workflow:run:
# required by ci job
- name: test
  jobs:
  - task:
      ref: golang:test(dukkha)
      matrix_filter: {}
  # test shell PATH lookup
  # if any issue, fix it in https://github.com/arhat-dev/sh/tree/dukkha
  - name: test path lookup under cygwin
    if@tlang: eq matrix.kernel "windows"

    shell: |-
      set -x

      echo "PATH=${PATH}"

      command -v cygpath
      command -v dukkha

      make dukkha

      tmpl:dukkha.Self render <<EOF
      sh@shell: command -v dukkha
      tmpl@tlang: fs.Lookup "dukkha"
      EOF

  - name: test path lookup under wine64
    if@tlang: ne matrix.kernel "windows"
    shell: |-
      set -x

      make dukkha

      tmpl:dukkha.Self run golang local build dukkha -m kernel=windows -m arch=amd64

      DUKKHA_CACHE_DIR="$(wine64 winepath -w "${DUKKHA_CACHE_DIR}")" \
      wine64 ./build/dukkha-windows-amd64.exe render <<EOF

      sh@shell: command -v winepath
      tmpl@tlang: fs.Lookup "winepath"

      EOF

  - name: test path lookup under wine32
    # macos doesn't support running i386 wine
    if@tlang: eq matrix.kernel "linux"
    shell: |-
      set -x

      # already built ./build/dukkha in previous step

      tmpl:dukkha.Self run golang local build dukkha -m kernel=windows -m arch=x86

      DUKKHA_CACHE_DIR="$(wine winepath -w "${DUKKHA_CACHE_DIR}" 2>/dev/null)" \
      wine ./build/dukkha-windows-x86.exe render <<EOF

      sh@shell: command -v winepath
      tmpl@tlang: fs.Lookup "winepath"

      EOF

- name: report
  matrix:
    tool:
    - sonar-scanner
  jobs:
  # only run sonar scan on linux and darwin during CI
  - cmd@presets?str|tmpl#use-spec: tools/presets.tmpl
    continue_on_error: true
