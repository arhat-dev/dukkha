workflow:run:
# required by ci
- name: build-artifacts
  jobs:
  - task: golang:build(dukkha, {})

# required by ci
- name: sign-artifacts
  jobs:
  # generate dukkha.*.sig
  - task@tpl: |-
      {{- if eq env.GITHUB_ACTIONS "true" -}}
        cosign:sign(dukkha, {})
      {{- else -}}
        cosign:sign(fake, {})
      {{- end -}}

# upload signed artifacts to ghcr.io
# required by ci
- name: upload-artifacts
  jobs:
  - task: docker:login(ghcr, {})
  - task: cosign:upload(dukkha, {})

# required by ci
- name: create-release
  jobs:
  # generate dukkha.*.{sha256,sha512,md5}
  - task: workflow:run(gen-artifacts-checksum, {})
  # generate dukkha.*.{tar.gz,zip}
  # using dukkha.*.{,.exe,sha256,sha512,md5,sig} and license.txt
  - task: archive:create(dukkha, {})

  # generate checksums for archives
  - chdir: build
    shell: |-
      openssl dgst -sha256 *.tar* *.zip > sha256.txt
      openssl dgst -sha512 *.tar* *.zip > sha512.txt
      openssl dgst -md5 *.tar* *.zip > md5.txt

  # create github release
  - task@tpl: |-
      {{- if eq env.GITHUB_ACTIONS "true" -}}
        github:release(dukkha, {})
      {{- else -}}
        github:release(fake, {})
      {{- end -}}
    continue_on_error@tpl: |-
      {{- if eq env.GITHUB_ACTIONS "true" -}}
        false
      {{- else -}}
        true
      {{- end -}}

#
#
#

- name: gen-artifacts-checksum
  matrix@file: cicd/artifacts/matrix.yml
  jobs:
  - chdir: build
    shell@tpl: |-
      openssl dgst -sha256 {{ include "artifacts.bin-name" . }} \
        > dukkha.{{ matrix.kernel }}.{{ matrix.arch }}.sha256
      openssl dgst -sha512 {{ include "artifacts.bin-name" . }} \
        > dukkha.{{ matrix.kernel }}.{{ matrix.arch }}.sha512
      openssl dgst -md5 {{ include "artifacts.bin-name" . }} \
        > dukkha.{{ matrix.kernel }}.{{ matrix.arch }}.md5
