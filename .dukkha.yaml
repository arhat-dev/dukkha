# yaml-language-server: $schema=./docs/generated/schema.json

include:
- path@echo: cicd

renderers:
- http:
    cache:
      enabled: true
      timeout: 5h

  env:
    enable_exec: true

  tmpl:
    include:
    - path: cicd/artifacts/bin-name.tmpl

  tlang:
    include:
    - path: cicd/artifacts/bin-name.tl

# offline mode switch when network connection is not available
#
# to activate:
# - set LOCAL_DUKKHA_PRESETS_PATH to some local dir (a empty value will use ${PWD}/.dukkha/cache/dukkha-presets)
# - git clone https://github.com/arhat-dev/dukkha-presets "${LOCAL_DUKKHA_PRESETS_PATH}"
#   or `git clone https://github.com/arhat-dev/dukkha-presets "${PWD}/.dukkha/cache/dukkha-presets"` when LOCAL_DUKKHA_PRESETS_PATH is set to empty
- file:dukkha-presets:
    alias@tlang: if env.LOCAL_DUKKHA_PRESETS_PATH; `presets`; end
    base_path@env: ${LOCAL_DUKKHA_PRESETS_PATH:-".dukkha/cache/dukkha-presets"}

  http:dukkha-presets:
    alias@tlang: if not env.LOCAL_DUKKHA_PRESETS_PATH; `presets`; end
    cache:
      enabled: true
      timeout: 2h
    base_url: https://raw.githubusercontent.com/arhat-dev/dukkha-presets/dev/

global:
  default_git_branch: master
  env:
  - name: GO_VERSION
    value: "1.18"
  values:
    cmd:
      run_ctr@presets?str|tlang: templates/run-ctr.tl

tools:
  archive:
  - name: local
  - name: in-ctr

  workflow:
  - name: local
  - name: in-ctr

  golang:
  - name: local
  - name: in-ctr
    cmd@tlang#use-spec:
      template: include "golang.cmd.ctr" .
      include:
      - text@presets?str: templates/image/flavored-tag.tl
      - text@presets?str: golang/cmd/ctr.tl

      variables:
        version@env?str: ${GO_VERSION}
        # run_ctr:

  cosign:
  - name: local
  - name: in-ctr
    cmd@tlang#use-spec:
      template: include "cosign.cmd.ctr" .
      include:
      - text@presets?str: cosign/cmd/ctr.tl

  # docker is required by cosign upload (login to docker registry)
  docker:
  - name: local
  # TODO: support docker in docker
  - name: in-ctr

  github:
  - name: local
  - name: in-ctr

  buildah:
  - name: local
  - name: in-ctr
    cmd@tlang#use-spec:
      template: include "buildah.cmd.ctr" .

      include:
      - text@presets?str: buildah/cmd/ctr.tl

      variables:
        run_ctr@tlang#use-spec:
          template@presets?str: templates/run-ctr.tl
          variables:
            privileged: true
        # version: latest
