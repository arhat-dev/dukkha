tools:
  golang:
  - name: local
    env:
    - name: GO111MODULE
      value: "on"
    - name: GO_PROXY
      value: direct
    - name: GO_SUMDB
      value: "off"
    cmd: [go]
  - name: in-docker
    # when using shell, you can leave environment variables unexpanded
    # and do extra scripting before actually run the tool
    cmd@template|env:
    - docker run -it --rm -v $(pwd):$(pwd) -w $(pwd)
    - ghcr.io/arhat-dev/builder-golang:1.17-alpine-{{ matrix.arch | default env.HOST_ARCH | trimSuffix "hf" }}
    - go
  cosign:
  - name: local

golang:build@!:
  resolve: false
  value@file: scripts/dukkha/go-build.yml
  merge:
  - value@file: scripts/dukkha/testdata/go-build-fake.yml

golang:test@file: scripts/dukkha/go-test.yml

cosign:upload:
- name: dukkha
  matrix@file: scripts/dukkha/build-matrix.yml
  hooks:
    before:
    - task: docker:login(ghcr)
  signing:
    enabled: true
    annotations:
      org.opencontainers.image.source: https://github.com/arhat-dev/dukkha
    private_key@env: ${COSIGN_PRIVATE_KEY}
    private_key_password@env: ${COSIGN_PRIVATE_KEY_PASSWORD}
    verify: true
    public_key@http: https://arhat.dev/.well-known/cosign.pub
  files:
  - path@template: |-
      {{- $blob_file := printf "build/dukkha.%s.%s" matrix.kernel matrix.arch -}}
      {{- if eq matrix.kernel "windows" -}}
        {{- $blob_file = printf "%s.exe" $blob_file -}}
      {{- end -}}
      {{- $blob_file -}}
    content_type: ""
  image_names:
  - image: ghcr.io/arhat-dev/dist/dukkha
