tools:
  docker:
  # first tool in this kind will be the default tool
  - name: local
    env:
    - name: DOCKER_BUILDKIT
      value: "1"

  buildah:
  - name: local
  # $ docker volume create buildah-dukkha
  - name: in-docker
    # when not using shell, the cmd must be set as an array of args
    use_shell: false
    shell_name: ""
    cmd@env:
    - docker
    - run
    - -it
    - --rm
    - --workdir
    - $(pwd)
    - -v
    - $(pwd):$(pwd)
    - --security-opt
    - label=disable
    - --security-opt
    - seccomp=unconfined
    - -v
    - buildah-dukkha:/var/lib/containers
    - --device
    - /dev/fuse:rw
    - quay.io/buildah/stable
    - buildah

  - name: in-lima-containerd
    cmd@env: [
      limactl, shell, containerd, sudo, buildah
    ]

  - name: in-lima-containerd-ctr
    cmd@env: [
      limactl, shell, containerd,
      sudo, nerdctl, run, --rm,
      --workdir, "${DUKKHA_WORKING_DIR}",
      -v, "${DUKKHA_WORKING_DIR}:${DUKKHA_WORKING_DIR}",
      --privileged,
      # --security-opt, label=disable,
      # --security-opt, seccomp=unconfined,
      -v, "buildah-dockerfile:/var/lib/containers",
      --device, "/dev/fuse:rw",
      quay.io/buildah/stable,
      buildah,
    ]

buildah:build:
- &dukkha_image_build
  name: dukkha
  matrix@file|template: &dukkha_image_matrix scripts/dukkha/image-matrix.yml
  image_names: &dukkha_image_names
  - image: ghcr.io/arhat-dev/dukkha
    manifest: ghcr.io/arhat-dev/dukkha
  file@env: cicd/docker/dukkha.${MATRIX_KERNEL}.dockerfile
  # yamllint disable-line rule:quoted-strings
  context: "."
  extra_args@template:
  - --pull
  - --no-cache
  - --build-arg
  - MATRIX_ARCH={{ .Env.MATRIX_ARCH }}

buildah:xbuild:
- name: dukkha
  matrix@file|template: *dukkha_image_matrix
  image_names: *dukkha_image_names
  # context: "."
  steps:
  - id: builder
    from:
      ref: ghcr.io/arhat-dev/builder-golang:1.16-alpine
  - copy:
      from:
        local:
          path: "."
      to:
        path: /app
  - run:
      script@env: |-
        #!/bin/sh

        set -ex
        make dukkha
        ./build/dukkha golang local build dukkha -m kernel=linux -m arch=${MATRIX_ARCH}
      extra_args:
      - --tty

  - from:
      ref: scratch

  - copy:
      from:
        step:
          id: builder
          path@env: /app/build/dukkha.linux.${MATRIX_ARCH}
      to:
        path: /dukkha

buildah:login:
- &login
  name: ghcr
  registry: ghcr.io
  username: ${GHCR_USER}
  password@env: ${GHCR_PASS}

buildah:push:
- &dukkha_image_push
  name: dukkha
  hooks:
    before:
    - task: buildah:login(ghcr)
  matrix@file|template: *dukkha_image_matrix
  image_names: *dukkha_image_names

docker:login:
- *login

docker:build:
- *dukkha_image_build

docker:push:
- *dukkha_image_push
