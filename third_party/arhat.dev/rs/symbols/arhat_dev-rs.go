// Code generated by 'yaegi extract arhat.dev/rs'. DO NOT EDIT.

package rs_symbols

import (
	"arhat.dev/rs"
	"go/constant"
	"go/token"
	"gopkg.in/yaml.v3"
	"reflect"
)

func init() {
	Symbols["arhat.dev/rs/rs"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"ErrInterfaceTypeNotHandled": reflect.ValueOf(&rs.ErrInterfaceTypeNotHandled).Elem(),
		"Init":                       reflect.ValueOf(rs.Init),
		"InitRecursively":            reflect.ValueOf(rs.InitRecursively),
		"MergeMap":                   reflect.ValueOf(rs.MergeMap),
		"TagName":                    reflect.ValueOf(constant.MakeFromLiteral("\"rs\"", token.STRING, 0)),
		"TagNameRS":                  reflect.ValueOf(constant.MakeFromLiteral("\"rs\"", token.STRING, 0)),
		"UniqueList":                 reflect.ValueOf(rs.UniqueList),

		// type definitions
		"AnyObject":               reflect.ValueOf((*rs.AnyObject)(nil)),
		"BaseField":               reflect.ValueOf((*rs.BaseField)(nil)),
		"Field":                   reflect.ValueOf((*rs.Field)(nil)),
		"InterfaceTypeHandleFunc": reflect.ValueOf((*rs.InterfaceTypeHandleFunc)(nil)),
		"InterfaceTypeHandler":    reflect.ValueOf((*rs.InterfaceTypeHandler)(nil)),
		"JSONPatchSpec":           reflect.ValueOf((*rs.JSONPatchSpec)(nil)),
		"MergeSource":             reflect.ValueOf((*rs.MergeSource)(nil)),
		"RenderingHandler":        reflect.ValueOf((*rs.RenderingHandler)(nil)),

		// interface wrapper definitions
		"_Field":                reflect.ValueOf((*_arhat_dev_rs_Field)(nil)),
		"_InterfaceTypeHandler": reflect.ValueOf((*_arhat_dev_rs_InterfaceTypeHandler)(nil)),
		"_RenderingHandler":     reflect.ValueOf((*_arhat_dev_rs_RenderingHandler)(nil)),
	}
}

// _arhat_dev_rs_Field is an interface wrapper for Field type
type _arhat_dev_rs_Field struct {
	IValue         interface{}
	WResolveFields func(rc rs.RenderingHandler, depth int, fieldNames ...string) error
	WUnmarshalYAML func(value *yaml.Node) error
}

func (W _arhat_dev_rs_Field) ResolveFields(rc rs.RenderingHandler, depth int, fieldNames ...string) error {
	return W.WResolveFields(rc, depth, fieldNames...)
}
func (W _arhat_dev_rs_Field) UnmarshalYAML(value *yaml.Node) error { return W.WUnmarshalYAML(value) }

// _arhat_dev_rs_InterfaceTypeHandler is an interface wrapper for InterfaceTypeHandler type
type _arhat_dev_rs_InterfaceTypeHandler struct {
	IValue  interface{}
	WCreate func(typ reflect.Type, yamlKey string) (interface{}, error)
}

func (W _arhat_dev_rs_InterfaceTypeHandler) Create(typ reflect.Type, yamlKey string) (interface{}, error) {
	return W.WCreate(typ, yamlKey)
}

// _arhat_dev_rs_RenderingHandler is an interface wrapper for RenderingHandler type
type _arhat_dev_rs_RenderingHandler struct {
	IValue      interface{}
	WRenderYaml func(renderer string, rawData interface{}) (result []byte, err error)
}

func (W _arhat_dev_rs_RenderingHandler) RenderYaml(renderer string, rawData interface{}) (result []byte, err error) {
	return W.WRenderYaml(renderer, rawData)
}
